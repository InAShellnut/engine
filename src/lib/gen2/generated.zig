//! Code generated by `tools/generate` - manual edits will be overwritten

const common = @import("../common/data.zig");

const data = @import("data.zig");
const mechanics = @import("mechanics.zig");

const Player = common.Player;
const Result = common.Result;

const Move = data.Move;

const Effects = mechanics.Effects;
const State = mechanics.State;

const checkHit = mechanics.checkHit;
const checkCriticalHit = mechanics.checkCriticalHit;
const calcDamage = mechanics.calcDamage;
const adjustDamage = mechanics.adjustDamage;
const randomizeDamage = mechanics.randomizeDamage;
const applyDamage = mechanics.applyDamage;
const buildRage = mechanics.buildRage;
const rageDamage = mechanics.rageDamage;
const kingsRock = mechanics.kingsRock;
const destinyBond = mechanics.destinyBond;

pub fn doMove(battle: anytype, player: Player, state: *State, options: anytype) !?Result {
    _ = .{ battle, player, options };

    switch (Move.get(state.move).effect) {
        .MultiHit => {}, // TODO
        .PayDay => {}, // TODO
        .BurnChance => {}, // TODO
        .FreezeChance => {}, // TODO
        .ParalyzeChance => {}, // TODO
        .OHKO => {}, // TODO
        .RazorWind => {}, // TODO
        .Gust => {}, // TODO
        .ForceSwitch => {}, // TODO
        .FlyDig => {}, // TODO
        .Binding => {}, // TODO
        .Stomp => {}, // TODO
        .DoubleHit => {}, // TODO
        .JumpKick => {}, // TODO
        .FlinchChance => {}, // TODO
        .Recoil => {}, // TODO
        .Thrashing => {}, // TODO
        .PoisonChance => {}, // TODO
        .Twineedle => {}, // TODO
        .Sleep => {}, // TODO
        .Confusion => {}, // TODO
        .FixedDamage => {}, // TODO
        .Disable => {}, // TODO
        .Mist => {}, // TODO
        .ConfusionChance => {}, // TODO
        .HyperBeam => {}, // TODO
        .Counter => {}, // TODO
        .LevelDamage => {}, // TODO
        .DrainHP => {}, // TODO
        .LeechSeed => {}, // TODO
        .Solarbeam => {}, // TODO
        .Poison => {}, // TODO
        .Paralyze => {}, // TODO
        .Thunder => {}, // TODO
        .Earthquake => {}, // TODO
        .Toxic => {}, // TODO
        .Priority => {}, // TODO
        .Rage => {}, // TODO
        .Teleport => {}, // TODO
        .Mimic => {}, // TODO
        .Heal => {}, // TODO
        .DefenseCurl => {}, // TODO
        .LightScreen => {}, // TODO
        .Haze => {}, // TODO
        .Reflect => {}, // TODO
        .FocusEnergy => {}, // TODO
        .Bide => {}, // TODO
        .Metronome => {}, // TODO
        .MirrorMove => {}, // TODO
        .Explode => {}, // TODO
        .AlwaysHit => {}, // TODO
        .SkullBash => {}, // TODO
        .DreamEater => {}, // TODO
        .SkyAttack => {}, // TODO
        .Transform => {}, // TODO
        .Psywave => {}, // TODO
        .Splash => {}, // TODO
        .Conversion => {}, // TODO
        .TriAttack => {}, // TODO
        .SuperFang => {}, // TODO
        .Substitute => {}, // TODO
        .Sketch => {}, // TODO
        .TripleKick => {}, // TODO
        .Thief => {}, // TODO
        .MeanLook => {}, // TODO
        .LockOn => {}, // TODO
        .Nightmare => {}, // TODO
        .FlameWheel => {}, // TODO
        .Snore => {}, // TODO
        .Curse => {}, // TODO
        .Reversal => {}, // TODO
        .Conversion2 => {}, // TODO
        .Spite => {}, // TODO
        .Protect => {}, // TODO
        .BellyDrum => {}, // TODO
        .Spikes => {}, // TODO
        .Foresight => {}, // TODO
        .DestinyBond => {}, // TODO
        .PerishSong => {}, // TODO
        .Sandstorm => {}, // TODO
        .Endure => {}, // TODO
        .Rollout => {}, // TODO
        .FalseSwipe => {}, // TODO
        .Swagger => {}, // TODO
        .FuryCutter => {}, // TODO
        .Attract => {}, // TODO
        .SleepTalk => {}, // TODO
        .HealBell => {}, // TODO
        .Return => {}, // TODO
        .Present => {}, // TODO
        .Frustration => {}, // TODO
        .Safeguard => {}, // TODO
        .PainSplit => {}, // TODO
        .SacredFire => {}, // TODO
        .Magnitude => {}, // TODO
        .BatonPass => {}, // TODO
        .Encore => {}, // TODO
        .Pursuit => {}, // TODO
        .RapidSpin => {}, // TODO
        .MorningSun => {}, // TODO
        .Synthesis => {}, // TODO
        .Moonlight => {}, // TODO
        .HiddenPower => {}, // TODO
        .Twister => {}, // TODO
        .RainDance => {}, // TODO
        .SunnyDay => {}, // TODO
        .MirrorCoat => {}, // TODO
        .PsychUp => {}, // TODO
        .AllStatUpChance => {}, // TODO
        .FutureSight => {}, // TODO
        .BeatUp => {}, // TODO
        // zig fmt: off
        .AttackUp1, .AttackUp2, .AttackUpChance, .DefenseUp1, .DefenseUp2,
        .DefenseUpChance, .EvasionUp1, .SpAtkUp1, .SpDefUp2, .SpeedUp2 => {}, // TODO
        // zig fmt: on
        // zig fmt: off
        .AccuracyDown1, .AccuracyDownChance, .AttackDown1, .AttackDown2,
        .AttackDownChance, .DefenseDown1, .DefenseDown2, .DefenseDownChance,
        .EvasionDown1, .SpDefDownChance, .SpeedDown1, .SpeedDown2, .SpeedDownChance => {}, // TODO
        // zig fmt: on
        .HighCritical, .None => {}, // TODO
    }

    return null;
}
